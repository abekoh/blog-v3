---
import { CollectionEntry } from "astro:content";
import Tag from "@/components/Tag.astro";
import { getCollection } from "astro:content";
import { formatDate } from "@/utils/date";

const tags = await getCollection("tags");
const tagMap = new Map(tags.map((tag) => [tag.data.id, tag.data]));

// modify https://github.com/withastro/astro/blob/0616ef255145bf173386b94474dede376e1f2037/packages/astro/src/%40types/astro.ts#L1534
export interface Page<T = any> {
  data: T[];
  start: number | undefined;
  end: number | undefined;
  total: number | undefined;
  currentPage: number | undefined;
  size: number | undefined;
  lastPage: number | undefined;
  url: {
    current: string | undefined;
    prev: string | undefined;
    next: string | undefined;
  };
}

interface Props {
  postPage: Page<CollectionEntry<"posts">>;
}

const { postPage } = Astro.props;
---

<section>
  <ul class="divide-y divide-gray-200">
    {
      postPage.data.map((post) => (
        <li class="py-6">
          <article>
            <div class="space-y-1">
              <div class="space-x-1">
                <time
                  class="text-sm text-base text-gray-500"
                  datetime={post.data.publishedAt}
                >
                  {formatDate(post.data.publishedAt)}
                </time>
                {post.data.modifiedAt && (
                  <time
                    class="text-sm text-base text-gray-500"
                    datetime={post.data.modifiedAt}
                  >
                    (updated: {formatDate(post.data.modifiedAt)})
                  </time>
                )}
              </div>
              <div>
                <h2 class="text-lg text-gray-900 font-bold leading-relaxed">
                  <a href={`/posts/${post.slug}`}>{post.data.title}</a>
                </h2>
              </div>
              {post.data.summary && (
                <div class="text-base text-gray-900 leading-relaxed">
                  <a href={`/posts/${post.slug}`}>{post.data.summary}</a>
                </div>
              )}
              <div class="flex flex-wrap">
                {post.data.tags.map((tagId) => (
                    <Tag
                        name={tagMap.get(tagId).name ?? ""}
                        href={`/tags/${tagId}`}
                    />
                ))}
              </div>
            </div>
          </article>
        </li>
      ))
    }
  </ul>
</section>
